/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PaymentChannel,
  PaymentChannelInterface,
} from "../../contracts/PaymentChannel";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlineTooEarly",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IdAlreadyUsed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "skMsgId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mpMsgId",
        type: "uint256",
      },
    ],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMicropaymentMessageSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigningMessageSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signingKeyAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChannelSettled",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage",
        name: "skMsg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage",
        name: "mpMsg",
        type: "tuple",
      },
    ],
    name: "settleChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage[]",
        name: "skMsgs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage[]",
        name: "mpMsgs",
        type: "tuple[]",
      },
    ],
    name: "settleChannels",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604080518082018252600e81526d14185e5b595b9d10da185b9b995b60921b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100f58184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010a92505050565b60805160a05160c05160e0516101005161012051610cc461015960003960006109b401526000610a03015260006109de01526000610937015260006109610152600061098b0152610cc46000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ce863231461003b578063c530d90514610050575b600080fd5b61004e610049366004610a51565b610063565b005b61004e61005e366004610ab5565b61040f565b61006c826104a5565b61008561007f6060840160408501610b7e565b8261076e565b81358135146100cf576040517fa035ec6900000000000000000000000000000000000000000000000000000000815282356004820152813560248201526044015b60405180910390fd5b813560009081526020819052604090205460ff161561011d576040517f285373ed000000000000000000000000000000000000000000000000000000008152823560048201526024016100c6565b81356000818152602081815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557fc1cebc41b61a0966aa0ec9ff5b3265f63e829b568b490293526943f12977787c929161018a91908601908601610b7e565b61019a6060860160408701610b7e565b6101aa6080870160608801610b7e565b6040805194855273ffffffffffffffffffffffffffffffffffffffff93841660208087019190915292841685820152921660608401528401356080830152519081900360a00190a16102026040830160208401610b7e565b73ffffffffffffffffffffffffffffffffffffffff1663d505accf61022d60a0850160808601610b7e565b3060c086013561010087013561024b61014089016101208a01610bbb565b60405160e087901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff16608482015261014085013560a482015261016085013560c482015260e401600060405180830381600087803b1580156102e557600080fd5b505af11580156102f9573d6000803e3d6000fd5b5060009250505060c08301356020830135106103195760c083013561031f565b81602001355b90506103316040840160208501610b7e565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd61035c60a0860160808701610b7e565b61036c6080870160608801610b7e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015291166024820152604481018490526064016020604051808303816000875af11580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190610bde565b50505050565b828114610448576040517f7db491eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8381101561049e5761048c85858381811061046857610468610c00565b90506101e0020184848481811061048157610481610c00565b905060a00201610063565b8061049681610c2f565b91505061044b565b5050505050565b60007fc58e6ce7d9b2a905c78dc7384f384e5e7a1996650420b38d3481a2c0974f5bfd82356104da6040850160208601610b7e565b6104ea6060860160408701610b7e565b6104fa6080870160608801610b7e565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c961052b60c0890160a08a01610b7e565b61053b60c08a0160a08b01610b7e565b60408051602081019490945273ffffffffffffffffffffffffffffffffffffffff9283169084015216606082015260c088810135608083015260e0808a013560a08401526101008a01359183019190915201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206105d561014089016101208a01610bbb565b60408051602081019890985287019590955273ffffffffffffffffffffffffffffffffffffffff9384166060870152918316608086015290911660a084015260c083015260ff1660e08201526101408381013561010083015261016084013561012083015201604051602081830303815290604052805190602001209050600061065e826108ae565b905060006001826106776101a087016101808801610bbb565b6040805160008152602081018083529390935260ff909116908201526101a086013560608201526101c0860135608082015260a0016020604051602081039080840390855afa1580156106ce573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151915061070a905060a0850160808601610b7e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610409576040517f5a16aa5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080517fd512697fc590c0f9774121d69bbe53e9e40cf89341e3f5b4a58210faa6e8a17660208083019190915283358284015283810135606080840191909152835180840390910181526080909201909252805191012060006107d1826108ae565b905060006001826107e86060870160408801610bbb565b6040805160008152602081018083529390935260ff90911690820152606080870135908201526080808701359082015260a0016020604051602081039080840390855afa15801561083d573d6000803e3d6000fd5b5050506020604051035190508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461049e576040517f27fc167200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109176108bb61091d565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561098357507f000000000000000000000000000000000000000000000000000000000000000046145b156109ad57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080828403610280811215610a6657600080fd5b6101e080821215610a7657600080fd5b84935060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe2083011215610aa957600080fd5b92959390920193505050565b60008060008060408587031215610acb57600080fd5b843567ffffffffffffffff80821115610ae357600080fd5b818701915087601f830112610af757600080fd5b813581811115610b0657600080fd5b8860206101e083028501011115610b1c57600080fd5b602092830196509450908601359080821115610b3757600080fd5b818701915087601f830112610b4b57600080fd5b813581811115610b5a57600080fd5b88602060a083028501011115610b6f57600080fd5b95989497505060200194505050565b600060208284031215610b9057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610bb457600080fd5b9392505050565b600060208284031215610bcd57600080fd5b813560ff81168114610bb457600080fd5b600060208284031215610bf057600080fd5b81518015158114610bb457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c87577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122015bf7ebb95ff0a194b4003a6f18b3089796bc9fa915835238b18dabdb96febf564736f6c63430008110033";

type PaymentChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentChannel__factory extends ContractFactory {
  constructor(...args: PaymentChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentChannel> {
    return super.deploy(overrides || {}) as Promise<PaymentChannel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentChannel {
    return super.attach(address) as PaymentChannel;
  }
  override connect(signer: Signer): PaymentChannel__factory {
    return super.connect(signer) as PaymentChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentChannelInterface {
    return new utils.Interface(_abi) as PaymentChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentChannel {
    return new Contract(address, _abi, signerOrProvider) as PaymentChannel;
  }
}
