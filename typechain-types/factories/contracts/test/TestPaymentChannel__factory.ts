/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestPaymentChannel,
  TestPaymentChannelInterface,
} from "../../../contracts/test/TestPaymentChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlineTooEarly",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IdAlreadyUsed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "skMsgId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mpMsgId",
        type: "uint256",
      },
    ],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMicropaymentMessageSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigningMessageSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signingKeyAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChannelSettled",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage",
        name: "skMsg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage",
        name: "mpMsg",
        type: "tuple",
      },
    ],
    name: "settleChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage[]",
        name: "skMsgs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage[]",
        name: "mpMsgs",
        type: "tuple[]",
      },
    ],
    name: "settleChannels",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signingKeyAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage",
        name: "mpMsg",
        type: "tuple",
      },
    ],
    name: "validateMicropaymentMessage",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage",
        name: "skMsg",
        type: "tuple",
      },
    ],
    name: "validateSigningKeyMessage",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040518060400160405280600e81526020017f5061796d656e744368616e6e656c0000000000000000000000000000000000008152506040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620000e88184846200013760201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505080610120818152505050505050506200024b565b6000838383463060405160200162000154959493929190620001ee565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b620001888162000173565b82525050565b6000819050919050565b620001a3816200018e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d682620001a9565b9050919050565b620001e881620001c9565b82525050565b600060a0820190506200020560008301886200017d565b6200021460208301876200017d565b6200022360408301866200017d565b62000232606083018562000198565b620002416080830184620001dd565b9695505050505050565b60805160a05160c05160e051610100516101205161124d6200029b600039600061090e015260006109500152600061092f01526000610864015260006108ba015260006108e3015261124d6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce8632314610051578063c530d9051461006d578063db425f5814610089578063de6eb520146100a5575b600080fd5b61006b60048036038101906100669190610a35565b6100c1565b005b61008760048036038101906100829190610b33565b610409565b005b6100a3600480360381019061009e9190610bb4565b6104ab565b005b6100bf60048036038101906100ba9190610c40565b6104b7565b005b6100ca826104c5565b6100e68260400160208101906100e09190610c80565b82610709565b806000013582600001351461013c57816000013581600001356040517fa035ec69000000000000000000000000000000000000000000000000000000008152600401610133929190610cc6565b60405180910390fd5b6000808360000135815260200190815260200160002060009054906101000a900460ff16156101a65781600001356040517f285373ed00000000000000000000000000000000000000000000000000000000815260040161019d9190610cef565b60405180910390fd5b60016000808460000135815260200190815260200160002060006101000a81548160ff0219169083151502179055507fc1cebc41b61a0966aa0ec9ff5b3265f63e829b568b490293526943f12977787c826000013583602001602081019061020e9190610c80565b8460400160208101906102219190610c80565b8560600160208101906102349190610c80565b856020013560405161024a959493929190610d19565b60405180910390a18160200160208101906102659190610c80565b73ffffffffffffffffffffffffffffffffffffffff1663d505accf8360800160000160208101906102969190610c80565b30856080016040013586608001608001358760800160a00160208101906102bd9190610da5565b8860800160c001358960800160e001356040518863ffffffff1660e01b81526004016102ef9796959493929190610dfa565b600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b5050505060008260800160400135826020013510610342578260800160400135610348565b81602001355b905082602001602081019061035d9190610c80565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd84608001600001602081019061038e9190610c80565b8560600160208101906103a19190610c80565b846040518463ffffffff1660e01b81526004016103c093929190610e69565b6020604051808303816000875af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610ed8565b50505050565b818190508484905014610448576040517f7db491eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b848490508110156104a45761049185858381811061046c5761046b610f05565b5b90506101e0020184848481811061048657610485610f05565b5b905060a002016100c1565b808061049c90610f63565b91505061044b565b5050505050565b6104b4816104c5565b50565b6104c18282610709565b5050565b60007fc58e6ce7d9b2a905c78dc7384f384e5e7a1996650420b38d3481a2c0974f5bfd82600001358360200160208101906105009190610c80565b8460400160208101906105139190610c80565b8560600160208101906105269190610c80565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987608001600001602081019061055d9190610c80565b8860800160200160208101906105739190610c80565b89608001604001358a608001606001358b608001608001356040516020016105a096959493929190610fab565b604051602081830303815290604052805190602001208760800160a00160208101906105cc9190610da5565b8860800160c001358960800160e001356040516020016105f49998979695949392919061100c565b604051602081830303815290604052805190602001209050600061061782610846565b90506000600182856101800160208101906106329190610da5565b866101a00135876101c001356040516000815260200160405260405161065b9493929190611099565b6020604051602081039080840390855afa15801561067d573d6000803e3d6000fd5b50505060206040510351905083608001600001602081019061069f9190610c80565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610703576040517f5a16aa5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60007fd512697fc590c0f9774121d69bbe53e9e40cf89341e3f5b4a58210faa6e8a17682600001358360200135604051602001610748939291906110de565b604051602081830303815290604052805190602001209050600061076b82610846565b905060006001828560400160208101906107859190610da5565b86606001358760800135604051600081526020016040526040516107ac9493929190611099565b6020604051602081039080840390855afa1580156107ce573d6000803e3d6000fd5b5050506020604051035190508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083f576040517f27fc167200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000610859610853610860565b8361097a565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156108dc57507f000000000000000000000000000000000000000000000000000000000000000046145b15610909577f00000000000000000000000000000000000000000000000000000000000000009050610977565b6109747f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006109ad565b90505b90565b6000828260405160200161098f92919061118d565b60405160208183030381529060405280519060200120905092915050565b600083838346306040516020016109c89594939291906111c4565b6040516020818303038152906040528051906020012090509392505050565b600080fd5b600080fd5b600080fd5b60006101e08284031215610a0d57610a0c6109f1565b5b81905092915050565b600060a08284031215610a2c57610a2b6109f1565b5b81905092915050565b6000806102808385031215610a4d57610a4c6109e7565b5b6000610a5b858286016109f6565b9250506101e0610a6d85828601610a16565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a9c57610a9b610a77565b5b8235905067ffffffffffffffff811115610ab957610ab8610a7c565b5b602083019150836101e0820283011115610ad657610ad5610a81565b5b9250929050565b60008083601f840112610af357610af2610a77565b5b8235905067ffffffffffffffff811115610b1057610b0f610a7c565b5b6020830191508360a0820283011115610b2c57610b2b610a81565b5b9250929050565b60008060008060408587031215610b4d57610b4c6109e7565b5b600085013567ffffffffffffffff811115610b6b57610b6a6109ec565b5b610b7787828801610a86565b9450945050602085013567ffffffffffffffff811115610b9a57610b996109ec565b5b610ba687828801610add565b925092505092959194509250565b60006101e08284031215610bcb57610bca6109e7565b5b6000610bd9848285016109f6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0d82610be2565b9050919050565b610c1d81610c02565b8114610c2857600080fd5b50565b600081359050610c3a81610c14565b92915050565b60008060c08385031215610c5757610c566109e7565b5b6000610c6585828601610c2b565b9250506020610c7685828601610a16565b9150509250929050565b600060208284031215610c9657610c956109e7565b5b6000610ca484828501610c2b565b91505092915050565b6000819050919050565b610cc081610cad565b82525050565b6000604082019050610cdb6000830185610cb7565b610ce86020830184610cb7565b9392505050565b6000602082019050610d046000830184610cb7565b92915050565b610d1381610c02565b82525050565b600060a082019050610d2e6000830188610cb7565b610d3b6020830187610d0a565b610d486040830186610d0a565b610d556060830185610d0a565b610d626080830184610cb7565b9695505050505050565b600060ff82169050919050565b610d8281610d6c565b8114610d8d57600080fd5b50565b600081359050610d9f81610d79565b92915050565b600060208284031215610dbb57610dba6109e7565b5b6000610dc984828501610d90565b91505092915050565b610ddb81610d6c565b82525050565b6000819050919050565b610df481610de1565b82525050565b600060e082019050610e0f600083018a610d0a565b610e1c6020830189610d0a565b610e296040830188610cb7565b610e366060830187610cb7565b610e436080830186610dd2565b610e5060a0830185610deb565b610e5d60c0830184610deb565b98975050505050505050565b6000606082019050610e7e6000830186610d0a565b610e8b6020830185610d0a565b610e986040830184610cb7565b949350505050565b60008115159050919050565b610eb581610ea0565b8114610ec057600080fd5b50565b600081519050610ed281610eac565b92915050565b600060208284031215610eee57610eed6109e7565b5b6000610efc84828501610ec3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6e82610cad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fa057610f9f610f34565b5b600182019050919050565b600060c082019050610fc06000830189610deb565b610fcd6020830188610d0a565b610fda6040830187610d0a565b610fe76060830186610cb7565b610ff46080830185610cb7565b61100160a0830184610cb7565b979650505050505050565b600061012082019050611022600083018c610deb565b61102f602083018b610cb7565b61103c604083018a610d0a565b6110496060830189610d0a565b6110566080830188610d0a565b61106360a0830187610deb565b61107060c0830186610dd2565b61107d60e0830185610deb565b61108b610100830184610deb565b9a9950505050505050505050565b60006080820190506110ae6000830187610deb565b6110bb6020830186610dd2565b6110c86040830185610deb565b6110d56060830184610deb565b95945050505050565b60006060820190506110f36000830186610deb565b6111006020830185610cb7565b61110d6040830184610cb7565b949350505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611156600283611115565b915061116182611120565b600282019050919050565b6000819050919050565b61118761118282610de1565b61116c565b82525050565b600061119882611149565b91506111a48285611176565b6020820191506111b48284611176565b6020820191508190509392505050565b600060a0820190506111d96000830188610deb565b6111e66020830187610deb565b6111f36040830186610deb565b6112006060830185610cb7565b61120d6080830184610d0a565b969550505050505056fea264697066735822122081d479837e5437609fc266b3025bcd3032c5b2e13cbfb54438e8b0c8a4fed00064736f6c63430008110033";

type TestPaymentChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPaymentChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPaymentChannel__factory extends ContractFactory {
  constructor(...args: TestPaymentChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestPaymentChannel> {
    return super.deploy(overrides || {}) as Promise<TestPaymentChannel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestPaymentChannel {
    return super.attach(address) as TestPaymentChannel;
  }
  override connect(signer: Signer): TestPaymentChannel__factory {
    return super.connect(signer) as TestPaymentChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPaymentChannelInterface {
    return new utils.Interface(_abi) as TestPaymentChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPaymentChannel {
    return new Contract(address, _abi, signerOrProvider) as TestPaymentChannel;
  }
}
