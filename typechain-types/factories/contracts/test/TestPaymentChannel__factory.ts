/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestPaymentChannel,
  TestPaymentChannelInterface,
} from "../../../contracts/test/TestPaymentChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlineTooEarly",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IdAlreadyUsed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "skMsgId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mpMsgId",
        type: "uint256",
      },
    ],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMicropaymentMessageSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigningMessageSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signingKeyAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChannelSettled",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage",
        name: "skMsg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage",
        name: "mpMsg",
        type: "tuple",
      },
    ],
    name: "settleChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage[]",
        name: "skMsgs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage[]",
        name: "mpMsgs",
        type: "tuple[]",
      },
    ],
    name: "settleChannels",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signingKeyAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.MicropaymentMessage",
        name: "mpMsg",
        type: "tuple",
      },
    ],
    name: "validateMicropaymentMessage",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "signingKeyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct PaymentChannel.Permit",
            name: "permitMsg",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct PaymentChannel.SigningKeyMessage",
        name: "skMsg",
        type: "tuple",
      },
    ],
    name: "validateSigningKeyMessage",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604080518082018252600e81526d14185e5b595b9d10da185b9b995b60921b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100f58184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010a92505050565b60805160a05160c05160e0516101005161012051610d6e6101596000396000610a0a01526000610a5901526000610a340152600061098d015260006109b7015260006109e10152610d6e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce8632314610051578063c530d90514610066578063db425f5814610079578063de6eb5201461008c575b600080fd5b61006461005f366004610ad2565b61009f565b005b610064610074366004610b09565b61044b565b610064610087366004610bd2565b6104e1565b61006461009a366004610c1f565b6104ed565b6100a8826104fb565b6100c16100bb6060840160408501610c4a565b826107c4565b813581351461010b576040517fa035ec6900000000000000000000000000000000000000000000000000000000815282356004820152813560248201526044015b60405180910390fd5b813560009081526020819052604090205460ff1615610159576040517f285373ed00000000000000000000000000000000000000000000000000000000815282356004820152602401610102565b81356000818152602081815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557fc1cebc41b61a0966aa0ec9ff5b3265f63e829b568b490293526943f12977787c92916101c691908601908601610c4a565b6101d66060860160408701610c4a565b6101e66080870160608801610c4a565b6040805194855273ffffffffffffffffffffffffffffffffffffffff93841660208087019190915292841685820152921660608401528401356080830152519081900360a00190a161023e6040830160208401610c4a565b73ffffffffffffffffffffffffffffffffffffffff1663d505accf61026960a0850160808601610c4a565b3060c086013561010087013561028761014089016101208a01610c65565b60405160e087901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff16608482015261014085013560a482015261016085013560c482015260e401600060405180830381600087803b15801561032157600080fd5b505af1158015610335573d6000803e3d6000fd5b5060009250505060c08301356020830135106103555760c083013561035b565b81602001355b905061036d6040840160208501610c4a565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd61039860a0860160808701610c4a565b6103a86080870160608801610c4a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015291166024820152604481018490526064016020604051808303816000875af1158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610c88565b50505050565b828114610484576040517f7db491eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838110156104da576104c88585838181106104a4576104a4610caa565b90506101e002018484848181106104bd576104bd610caa565b905060a0020161009f565b806104d281610cd9565b915050610487565b5050505050565b6104ea816104fb565b50565b6104f782826107c4565b5050565b60007fc58e6ce7d9b2a905c78dc7384f384e5e7a1996650420b38d3481a2c0974f5bfd82356105306040850160208601610c4a565b6105406060860160408701610c4a565b6105506080870160608801610c4a565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c961058160c0890160a08a01610c4a565b61059160c08a0160a08b01610c4a565b60408051602081019490945273ffffffffffffffffffffffffffffffffffffffff9283169084015216606082015260c088810135608083015260e0808a013560a08401526101008a01359183019190915201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012061062b61014089016101208a01610c65565b60408051602081019890985287019590955273ffffffffffffffffffffffffffffffffffffffff9384166060870152918316608086015290911660a084015260c083015260ff1660e0820152610140838101356101008301526101608401356101208301520160405160208183030381529060405280519060200120905060006106b482610904565b905060006001826106cd6101a087016101808801610c65565b6040805160008152602081018083529390935260ff909116908201526101a086013560608201526101c0860135608082015260a0016020604051602081039080840390855afa158015610724573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150610760905060a0850160808601610c4a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610445576040517f5a16aa5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080517fd512697fc590c0f9774121d69bbe53e9e40cf89341e3f5b4a58210faa6e8a176602080830191909152833582840152838101356060808401919091528351808403909101815260809092019092528051910120600061082782610904565b9050600060018261083e6060870160408801610c65565b6040805160008152602081018083529390935260ff90911690820152606080870135908201526080808701359082015260a0016020604051602081039080840390855afa158015610893573d6000803e3d6000fd5b5050506020604051035190508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104da576040517f27fc167200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061096d610911610973565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156109d957507f000000000000000000000000000000000000000000000000000000000000000046145b15610a0357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60006101e08284031215610aba57600080fd5b50919050565b600060a08284031215610aba57600080fd5b6000806102808385031215610ae657600080fd5b610af08484610aa7565b9150610b00846101e08501610ac0565b90509250929050565b60008060008060408587031215610b1f57600080fd5b843567ffffffffffffffff80821115610b3757600080fd5b818701915087601f830112610b4b57600080fd5b813581811115610b5a57600080fd5b8860206101e083028501011115610b7057600080fd5b602092830196509450908601359080821115610b8b57600080fd5b818701915087601f830112610b9f57600080fd5b813581811115610bae57600080fd5b88602060a083028501011115610bc357600080fd5b95989497505060200194505050565b60006101e08284031215610be557600080fd5b610bef8383610aa7565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c1a57600080fd5b919050565b60008060c08385031215610c3257600080fd5b610c3b83610bf6565b9150610b008460208501610ac0565b600060208284031215610c5c57600080fd5b610bef82610bf6565b600060208284031215610c7757600080fd5b813560ff81168114610bef57600080fd5b600060208284031215610c9a57600080fd5b81518015158114610bef57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d31577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122020513209cdede1a988c18d0d63746465938b029ee35a86fb2c813b9785d75c9764736f6c63430008110033";

type TestPaymentChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPaymentChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPaymentChannel__factory extends ContractFactory {
  constructor(...args: TestPaymentChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestPaymentChannel> {
    return super.deploy(overrides || {}) as Promise<TestPaymentChannel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestPaymentChannel {
    return super.attach(address) as TestPaymentChannel;
  }
  override connect(signer: Signer): TestPaymentChannel__factory {
    return super.connect(signer) as TestPaymentChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPaymentChannelInterface {
    return new utils.Interface(_abi) as TestPaymentChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPaymentChannel {
    return new Contract(address, _abi, signerOrProvider) as TestPaymentChannel;
  }
}
